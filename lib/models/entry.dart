import 'package:flutter/material.dart';
import 'package:json_annotation/json_annotation.dart';

part 'entry.g.dart';

enum Feeling {
  veryHappy,
  happy,
  sad,
  angry,
  unknown,
}

/*
  [N] Note :
  With JsonSerializable, i had to set the date as required without default value.
  The class EntryCreator will manage this default value.
  This was the only way i found to get date in entry.g.dart generated by :
  `flutter pub run build_runner build --delete-conflicting-outputs`
 */


@JsonSerializable()
class Entry {
  final String usermail;
  final DateTime date;
  final String title;
  final String content;
  final String feeling;

  Entry({required this.usermail, required this.title, required this.content, required this.feeling, required this.date});

  static String getStringFromFeeling({required Feeling feeling}) {
    return _feelingToIconMap[feeling] ?? 'sentiment_neutral';
  }

  static IconData getIconDataFromString({required String feeling}) {
    return _stringToIconDataMap[feeling] ?? Icons.sentiment_neutral;
  }

  static const Map<Feeling, String> _feelingToIconMap = {
    Feeling.veryHappy: 'sentiment_very_satisfied_outlined',
    Feeling.happy: 'sentiment_satisfied_outlined',
    Feeling.sad: 'sentiment_dissatisfied_outlined',
    Feeling.angry: 'sentiment_very_dissatisfied_outlined',
    Feeling.unknown: 'sentiment_neutral_outlined',
  };

  static const Map<String, IconData> _stringToIconDataMap = {
    'sentiment_very_satisfied_outlined'   :       Icons.sentiment_very_satisfied_outlined,
    'sentiment_satisfied_outlined'        :       Icons.sentiment_satisfied_outlined,
    'sentiment_dissatisfied_outlined'         :       Icons.sentiment_very_dissatisfied,
    'sentiment_very_dissatisfied_outlined'              :       Icons.sentiment_very_dissatisfied_outlined,
    'sentiment_neutral_outlined'                   :       Icons.sentiment_neutral_outlined,
  };
  static Map<String, IconData> get stringToIconDataMap => _stringToIconDataMap;

  factory Entry.fromJson(Map<String, dynamic> json) => _$EntryFromJson(json);

  Map<String, dynamic> toJson() => _$EntryToJson(this);

  @override
  String toString() {
    return 'Entry{usermail: $usermail, date: $date, title: $title, content: $content, feeling: $feeling}';
  }

  factory Entry.fromFirestore(Map<String, dynamic> json) {
    final String usermail = json['usermail'] ?? '';
    final DateTime date = DateTime.tryParse(json['date'] ?? '') ?? DateTime.now();
    final String title = json['title'] ?? 'empty title';
    final String content = json['content'] ?? 'empty content';
    final String feeling = json['feeling'] ?? 'sentiment_neutral';

    return Entry(
      usermail: usermail,
      date: date,
      title: title,
      content: content,
      feeling: feeling,
    );
  }

  Map<String, dynamic> toFirestore() {
    return {
      'usermail': usermail,
      'date': date,
      'title': title,
      'content': content,
      'feeling': feeling,
    };
  }
}